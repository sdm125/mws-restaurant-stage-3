var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var DBHelper=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"getLocalDatabase",value:function(){return idb.open("restaurant-reviews-data",1,function(e){e.createObjectStore("restaurant-reviews",{keyPath:"id"})})}},{key:"fetchRestaurants",value:function(t){fetch(e.DATABASE_URL("allRestaurants")).then(function(e){return e.ok||Error(e.statusText),e.json()}).then(function(n){t(null,n),e.getLocalDatabase().then(function(e){var t=e.transaction("restaurant-reviews","readwrite").objectStore("restaurant-reviews"),r=!0,o=!1,a=void 0;try{for(var i,u=n[Symbol.iterator]();!(r=(i=u.next()).done);r=!0){var s=i.value;t.put(s)}}catch(e){o=!0,a=e}finally{try{!r&&u.return&&u.return()}finally{if(o)throw a}}})}).catch(function(n){e.getLocalDatabase().then(function(e){return e.transaction("restaurant-reviews").objectStore("restaurant-reviews").getAll()}).then(function(e){t(null,e)})})}},{key:"fetchRestaurantById",value:function(t,n){e.fetchRestaurants(function(e,r){if(e)n(e,null);else{var o=r.find(function(e){return e.id==t});o?n(null,o):n("Restaurant does not exist",null)}})}},{key:"fetchRestaurantByCuisine",value:function(t,n){e.fetchRestaurants(function(e,r){if(e)n(e,null);else{var o=r.filter(function(e){return e.cuisine_type==t});n(null,o)}})}},{key:"fetchRestaurantByNeighborhood",value:function(t,n){e.fetchRestaurants(function(e,r){if(e)n(e,null);else{var o=r.filter(function(e){return e.neighborhood==t});n(null,o)}})}},{key:"fetchRestaurantByCuisineAndNeighborhood",value:function(t,n,r){e.fetchRestaurants(function(e,o){if(e)r(e,null);else{var a=o;"all"!=t&&(a=a.filter(function(e){return e.cuisine_type==t})),"all"!=n&&(a=a.filter(function(e){return e.neighborhood==n})),r(null,a)}})}},{key:"fetchNeighborhoods",value:function(t){e.fetchRestaurants(function(e,n){if(e)t(e,null);else{var r=n.map(function(e,t){return n[t].neighborhood}),o=r.filter(function(e,t){return r.indexOf(e)==t});t(null,o)}})}},{key:"fetchCuisines",value:function(t){e.fetchRestaurants(function(e,n){if(e)t(e,null);else{var r=n.map(function(e,t){return n[t].cuisine_type}),o=r.filter(function(e,t){return r.indexOf(e)==t});t(null,o)}})}},{key:"urlForRestaurant",value:function(e){return"./restaurant.html?id="+e.id}},{key:"imageUrlForRestaurant",value:function(e,t){return e.photograph?"sm"===t?"/img/"+e.photograph+"_400.jpg":"/img/"+e.photograph+"_800.jpg":"sm"===t?"/img/default_400.jpg":"/img/default_800.jpg"}},{key:"mapMarkerForRestaurant",value:function(t,n){return new google.maps.Marker({position:t.latlng,title:t.name,url:e.urlForRestaurant(t),map:n,animation:google.maps.Animation.DROP})}},{key:"DATABASE_URL",get:function(){return"http://localhost:1337/restaurants/"}}]),e}();!function(){function e(e){return new Promise(function(t,n){e.onsuccess=function(){t(e.result)},e.onerror=function(){n(e.error)}})}function t(t,n,r){var o,a=new Promise(function(a,i){e(o=t[n].apply(t,r)).then(a,i)});return a.request=o,a}function n(e,t,n){n.forEach(function(n){Object.defineProperty(e.prototype,n,{get:function(){return this[t][n]},set:function(e){this[t][n]=e}})})}function r(e,n,r,o){o.forEach(function(o){o in r.prototype&&(e.prototype[o]=function(){return t(this[n],o,arguments)})})}function o(e,t,n,r){r.forEach(function(r){r in n.prototype&&(e.prototype[r]=function(){return this[t][r].apply(this[t],arguments)})})}function a(e,n,r,o){o.forEach(function(o){o in r.prototype&&(e.prototype[o]=function(){return e=this[n],(r=t(e,o,arguments)).then(function(e){if(e)return new u(e,r.request)});var e,r})})}function i(e){this._index=e}function u(e,t){this._cursor=e,this._request=t}function s(e){this._store=e}function c(e){this._tx=e,this.complete=new Promise(function(t,n){e.oncomplete=function(){t()},e.onerror=function(){n(e.error)},e.onabort=function(){n(e.error)}})}function l(e,t,n){this._db=e,this.oldVersion=t,this.transaction=new c(n)}function d(e){this._db=e}n(i,"_index",["name","keyPath","multiEntry","unique"]),r(i,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]),a(i,"_index",IDBIndex,["openCursor","openKeyCursor"]),n(u,"_cursor",["direction","key","primaryKey","value"]),r(u,"_cursor",IDBCursor,["update","delete"]),["advance","continue","continuePrimaryKey"].forEach(function(t){t in IDBCursor.prototype&&(u.prototype[t]=function(){var n=this,r=arguments;return Promise.resolve().then(function(){return n._cursor[t].apply(n._cursor,r),e(n._request).then(function(e){if(e)return new u(e,n._request)})})})}),s.prototype.createIndex=function(){return new i(this._store.createIndex.apply(this._store,arguments))},s.prototype.index=function(){return new i(this._store.index.apply(this._store,arguments))},n(s,"_store",["name","keyPath","indexNames","autoIncrement"]),r(s,"_store",IDBObjectStore,["put","add","delete","clear","get","getAll","getKey","getAllKeys","count"]),a(s,"_store",IDBObjectStore,["openCursor","openKeyCursor"]),o(s,"_store",IDBObjectStore,["deleteIndex"]),c.prototype.objectStore=function(){return new s(this._tx.objectStore.apply(this._tx,arguments))},n(c,"_tx",["objectStoreNames","mode"]),o(c,"_tx",IDBTransaction,["abort"]),l.prototype.createObjectStore=function(){return new s(this._db.createObjectStore.apply(this._db,arguments))},n(l,"_db",["name","version","objectStoreNames"]),o(l,"_db",IDBDatabase,["deleteObjectStore","close"]),d.prototype.transaction=function(){return new c(this._db.transaction.apply(this._db,arguments))},n(d,"_db",["name","version","objectStoreNames"]),o(d,"_db",IDBDatabase,["close"]),["openCursor","openKeyCursor"].forEach(function(e){[s,i].forEach(function(t){e in t.prototype&&(t.prototype[e.replace("open","iterate")]=function(){var t,n=(t=arguments,Array.prototype.slice.call(t)),r=n[n.length-1],o=this._store||this._index,a=o[e].apply(o,n.slice(0,-1));a.onsuccess=function(){r(a.result)}})})}),[i,s].forEach(function(e){e.prototype.getAll||(e.prototype.getAll=function(e,t){var n=this,r=[];return new Promise(function(o){n.iterateCursor(e,function(e){e?(r.push(e.value),void 0===t||r.length!=t?e.continue():o(r)):o(r)})})})});var f={open:function(e,n,r){var o=t(indexedDB,"open",[e,n]),a=o.request;return a&&(a.onupgradeneeded=function(e){r&&r(new l(a.result,e.oldVersion,a.transaction))}),o.then(function(e){return new d(e)})},delete:function(e){return t(indexedDB,"deleteDatabase",[e])}};"undefined"!=typeof module?(module.exports=f,module.exports.default=module.exports):self.idb=f}();var restaurants=void 0,neighborhoods=void 0,cuisines=void 0,map=void 0,markers=[],home="/"===window.location.pathname;console.log("here"),document.addEventListener("DOMContentLoaded",function(e){fetchNeighborhoods(),fetchCuisines(),registerServiceWorker()}),window.addEventListener("load",function(){document.querySelectorAll("iframe")[0].title="Restaurant map"}),registerServiceWorker=function(){navigator.serviceWorker&&navigator.serviceWorker.register("/sw.js").then(function(){console.log("Service worked registered!")}).catch(function(e){console.log("Registration failed!")})},fetchNeighborhoods=function(){DBHelper.fetchNeighborhoods(function(e,t){e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})},fillNeighborhoodsHTML=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:self.neighborhoods,t=document.getElementById("neighborhoods-select");e.forEach(function(e){var n=document.createElement("option");n.innerHTML=e,n.value=e,home&&t.append(n)})},fetchCuisines=function(){DBHelper.fetchCuisines(function(e,t){e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})},fillCuisinesHTML=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:self.cuisines,t=document.getElementById("cuisines-select");e.forEach(function(e){var n=document.createElement("option");n.innerHTML=e,n.value=e,home&&t.append(n)})},window.initMap=function(){self.map=new google.maps.Map(document.querySelector(".map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),updateRestaurants()},updateRestaurants=function(){var e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e.selectedIndex,r=t.selectedIndex,o=e[n].value,a=t[r].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(o,a,function(e,t){e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})},document.getElementById("neighborhoods-select")&&document.getElementById("neighborhoods-select").addEventListener("change",function(){updateRestaurants()}),document.getElementById("cuisines-select")&&document.getElementById("cuisines-select").addEventListener("change",function(){updateRestaurants()}),resetRestaurants=function(e){self.restaurants=[],document.querySelector(".restaurants-list").innerHTML="",self.markers.forEach(function(e){return e.setMap(null)}),self.markers=[],self.restaurants=e},fillRestaurantsHTML=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:self.restaurants,t=document.querySelector(".restaurants-list");e.forEach(function(e){t.append(createRestaurantHTML(e))}),addMarkersToMap()},createRestaurantHTML=function(e){var t=document.createElement("li"),n=document.createElement("div"),r=document.createElement("picture"),o=document.createElement("source"),a=document.createElement("source"),i=document.createElement("img");o.className="restaurant-img",o.alt=e.name,o.media="(min-width: 500px)",o.srcset=DBHelper.imageUrlForRestaurant(e,"lg"),r.append(o),a.className="restaurant-img",a.alt=e.name,a.media="(max-width: 500px)",a.srcset=DBHelper.imageUrlForRestaurant(e,"sm"),r.append(a),i.className="restaurant-img",i.alt=e.name,i.src=DBHelper.imageUrlForRestaurant(e,"lg"),r.append(i),t.append(r);var u=document.createElement("h2");u.innerHTML=e.name,n.append(u);var s=document.createElement("p");s.innerHTML=e.neighborhood,s.classList+="neighborhood",n.append(s);var c=document.createElement("p");c.innerHTML=e.address,n.append(c);var l=document.createElement("a");return l.innerHTML="View Details",l.setAttribute("aria-label",e.name),l.href=DBHelper.urlForRestaurant(e),n.append(l),t.append(n),t},addMarkersToMap=function(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:self.restaurants).forEach(function(e){var t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",function(){window.location.href=t.url}),self.markers.push(t)})};var restaurant=void 0,mapInfo=void 0;"/restaurant.html"===window.location.pathname&&(window.initMap=function(){fetchRestaurantFromURL(function(e,t){e?console.error(e):(self.mapInfo=new google.maps.Map(document.querySelector(".map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.mapInfo))})}),fetchRestaurantFromURL=function(e){if(self.restaurant)e(null,self.restaurant);else{var t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,function(t,n){self.restaurant=n,n?(fillRestaurantHTML(),e(null,n)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}},fillRestaurantHTML=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:self.restaurant;document.querySelector(".restaurant-name").innerHTML=e.name,document.querySelector(".restaurant-address").innerHTML=e.address;var t=document.createElement("source"),n=document.createElement("source"),r=document.createElement("img"),o=document.querySelector(".restaurant-img");t.className="restaurant-img",t.alt=e.alt,t.media="(min-width: 500px)",t.srcset=DBHelper.imageUrlForRestaurant(e,"lg"),o.append(t),n.className="restaurant-img",n.alt=e.alt,n.media="(max-width: 500px)",n.srcset=DBHelper.imageUrlForRestaurant(e,"sm"),o.append(n),r.className="restaurant-img",r.alt=e.alt,r.src=DBHelper.imageUrlForRestaurant(e,"lg"),o.append(r),document.querySelector(".restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()},fillRestaurantHoursHTML=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:self.restaurant.operating_hours,t=document.querySelector(".restaurant-hours");for(var n in e){var r=document.createElement("tr"),o=document.createElement("td");o.innerHTML=n,r.appendChild(o);var a=document.createElement("td");a.innerHTML=e[n],r.appendChild(a),t.appendChild(r)}},fillReviewsHTML=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:self.restaurant.reviews,t=document.querySelector(".reviews-container");if(!e){var n=document.createElement("p");return n.innerHTML="No reviews yet!",void t.appendChild(n)}var r=document.querySelector(".reviews-list");e.forEach(function(e){r.appendChild(createReviewHTML(e))}),t.appendChild(r)},createReviewHTML=function(e){var t=document.createElement("li"),n=document.createElement("p");n.innerHTML=e.name,t.appendChild(n);var r=document.createElement("p");r.innerHTML=e.date,t.appendChild(r);var o=document.createElement("p");o.innerHTML="Rating: "+e.rating,t.appendChild(o);var a=document.createElement("p");return a.innerHTML=e.comments,t.appendChild(a),t},fillBreadcrumb=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:self.restaurant,t=document.querySelector(".breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)},getParameterByName=function(e,t){t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
